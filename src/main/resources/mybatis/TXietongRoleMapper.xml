<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.mgt.dao.TXietongRoleMapper" >
  <resultMap id="BaseResultMap" type="com.project.mgt.entity.TXietongRole" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="role_flag" property="roleFlag" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="decription" property="decription" jdbcType="VARCHAR" />
    <result column="isdelete" property="isdelete" jdbcType="INTEGER" />
    <result column="menus_sidebar" property="date" jdbcType="TIMESTAMP"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.project.mgt.entity.TXietongRoleWithBLOBs" extends="BaseResultMap" >
    <result column="menus" property="menus" jdbcType="LONGVARCHAR" />
    <result column="menus_sidebar" property="menusSidebar" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, role_flag, name, code, decription, isdelete
  </sql>
  <sql id="Blob_Column_List" >
    menus, menus_sidebar
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.project.mgt.entity.TXietongRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_xietong_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.project.mgt.entity.TXietongRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_xietong_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_xietong_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_xietong_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.project.mgt.entity.TXietongRoleExample" >
    delete from t_xietong_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.project.mgt.entity.TXietongRole" >
    insert into t_xietong_role (id, role_flag,name,code, decription, isdelete,menus_sidebar)
    values (#{id,jdbcType=VARCHAR}, #{roleFlag,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{decription,jdbcType=VARCHAR}, #{isdelete,jdbcType=INTEGER},#{date,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.project.mgt.entity.TXietongRoleWithBLOBs" >
    insert into t_xietong_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleFlag != null" >
        role_flag,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="decription != null" >
        decription,
      </if>
      <if test="isdelete != null" >
        isdelete,
      </if>
      <if test="menus != null" >
        menus,
      </if>
      <if test="menusSidebar != null" >
        menus_sidebar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleFlag != null" >
        #{roleFlag,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="decription != null" >
        #{decription,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="menus != null" >
        #{menus,jdbcType=LONGVARCHAR},
      </if>
      <if test="menusSidebar != null" >
        #{menusSidebar,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.project.mgt.entity.TXietongRoleExample" resultType="java.lang.Integer" >
    select count(*) from t_xietong_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_xietong_role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.roleFlag != null" >
        role_flag = #{record.roleFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.decription != null" >
        decription = #{record.decription,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null" >
        isdelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
      <if test="record.menus != null" >
        menus = #{record.menus,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.menusSidebar != null" >
        menus_sidebar = #{record.menusSidebar,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_xietong_role
    set id = #{record.id,jdbcType=VARCHAR},
      role_flag = #{record.roleFlag,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      decription = #{record.decription,jdbcType=VARCHAR},
      isdelete = #{record.isdelete,jdbcType=INTEGER},
      menus = #{record.menus,jdbcType=LONGVARCHAR},
      menus_sidebar = #{record.menusSidebar,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_xietong_role
    set id = #{record.id,jdbcType=VARCHAR},
      role_flag = #{record.roleFlag,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      decription = #{record.decription,jdbcType=VARCHAR},
      isdelete = #{record.isdelete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.mgt.entity.TXietongRoleWithBLOBs" >
    update t_xietong_role
    <set >
      <if test="roleFlag != null" >
        role_flag = #{roleFlag,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="decription != null" >
        decription = #{decription,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        isdelete = #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="menus != null" >
        menus = #{menus,jdbcType=LONGVARCHAR},
      </if>
      <if test="menusSidebar != null" >
        menus_sidebar = #{menusSidebar,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.project.mgt.entity.TXietongRoleWithBLOBs" >
    update t_xietong_role
    set role_flag = #{roleFlag,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      decription = #{decription,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=INTEGER},
      menus = #{menus,jdbcType=LONGVARCHAR},
      menus_sidebar = #{menusSidebar,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.mgt.entity.TXietongRole" >
    update t_xietong_role
    set role_flag = #{roleFlag,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      decription = #{decription,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="findAllRole" resultMap="BaseResultMap">
      SELECT * FROM t_xietong_role r WHERE r.`isdelete`="1" order by name;
  </select>

  <select id="findAllRolePage" resultMap="BaseResultMap">
    SELECT * FROM t_xietong_role r WHERE  r.`isdelete`="1" order by name limit #{pageNo},#{pageSize};
  </select>

  <select id="findRoleByNamePage" resultMap="BaseResultMap">
   SELECT * FROM t_xietong_role r WHERE r.`name`
   LIKE CONCAT('%',#{name}, '%')
   AND r.`isdelete` = '1'
   AND r.`role_flag` = #{status}
   order by name
   LIMIT #{pageNo},#{pageSize}
  </select>


  <select id="findRoleAllByName" resultMap="BaseResultMap">
     SELECT * FROM t_xietong_role r WHERE r.`name`
     LIKE CONCAT('%',#{name}, '%')
     AND r.`isdelete` = '1'
     order by name
     LIMIT #{pageNo},#{pageSize}
  </select>


  <select id="roleCount" resultType="int">
      SELECT COUNT(r.id) FROM t_xietong_role r WHERE r.`isdelete` = "1"
  </select>


  <select id="roleCountByName" resultType="int">
      SELECT COUNT(r.id) FROM t_xietong_role r  WHERE r.`isdelete` = "1"  AND r.`name` LIKE CONCAT('%',#{name},'%')
  </select>

  <select id="roleCountByNameAndStatus" resultType="int">
        SELECT COUNT(r.id) FROM t_xietong_role r  WHERE r.`isdelete` = "1"  AND r.`name` LIKE CONCAT('%',#{name},'%') AND r.`role_flag`=#{status}
  </select>

  <select id="findRoleByName" resultMap="BaseResultMap">
    SELECT * FROM t_xietong_role r  WHERE r.`name` = #{name} AND  r.`isdelete` = "1" order by name
  </select>


  <update id="enOrDisRole">
  UPDATE t_xietong_role u SET u.`role_flag`= #{status} WHERE u.`id` = #{rid}
  </update>

  <update id="deleteRoleByRid">
    UPDATE t_xietong_role r SET r.`isdelete`="0"  WHERE r.`id` = #{rid}
  </update>


  <resultMap id="roleAndUsers" type="com.project.mgt.entity.TXietongRole">
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="role_flag" property="roleFlag" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="decription" property="decription" jdbcType="VARCHAR" />
    <result column="isdelete" property="isdelete" jdbcType="INTEGER" />
    <result column="menus_sidebar" property="date" jdbcType="TIMESTAMP"/>
    <collection property="users" ofType="com.project.mgt.entity.TXietongUser">
      <id column="uid" property="id" jdbcType="VARCHAR" />
      <result column="login_name" property="loginName" jdbcType="VARCHAR" />
      <result column="departmentId" property="departmentid" jdbcType="VARCHAR" />
      <result column="name_cn" property="nameCn" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
      <result column="uisdelete" property="isdelete" jdbcType="SMALLINT" />
      <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
      <result column="sort" property="sort" jdbcType="INTEGER" />
      <result column="status" property="status" jdbcType="INTEGER" />
      <result column="birth" property="birth" jdbcType="TIMESTAMP" />
      <result column="political_aff" property="politicalAff" jdbcType="INTEGER" />
      <result column="telphone" property="telphone" jdbcType="VARCHAR" />
      <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
      <result column="top_contacts" property="topContacts" jdbcType="VARCHAR" />
      <result column="sex" property="sex" jdbcType="INTEGER" />
      <result column="emp_num" property="empNum" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <select id="findUsersByRid" resultMap="roleAndUsers">
    SELECT u.*,u.`id` AS uid,r.id AS rid,u.`isdelete` AS uisdelete,r.`isdelete` AS risdelete,r.*
    FROM t_xietong_user u INNER JOIN t_xietong_user_role ur ON u.`id` = ur.`user_id`
    INNER JOIN t_xietong_role r ON r.`id` = ur.`role_id`
    WHERE r.`id` = #{rid}  AND
    u.`isdelete` = '1' AND r.`isdelete` = '1' ORDER BY u.`sort` LIMIT #{pageNo},#{pageSize}
  </select>

  <select id="countUserByRid" resultType="int">
  SELECT COUNT(u.id) FROM t_xietong_user u INNER JOIN t_xietong_user_role ur ON u.`id` = ur.`user_id`
  INNER JOIN t_xietong_role r ON r.`id` = ur.`role_id`
  WHERE r.`id` = #{id} AND
  u.`isdelete` = '1' AND r.`isdelete` = '1'
  </select>

  <update id="updateTime">
    UPDATE t_xietong_role r SET r.`menus_sidebar` = #{date,jdbcType=TIMESTAMP} WHERE r.`id` = #{rid}
  </update>

  <resultMap id="menuButtons" type="com.project.mgt.entity.TXietongMenuButton">
    <id column="bid" property="id" jdbcType="VARCHAR" />
    <result column="bname" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="bisdelete" property="isdelete" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="isleaf" property="isleaf" jdbcType="INTEGER" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR"/>
    <result column="grade" property="grade" jdbcType="VARCHAR"/>
  </resultMap>


  <select id="findMenuButtonsByRoleName" resultMap="menuButtons">
    SELECT DISTINCT b.*,r.*,b.id AS bid ,r.id AS rrid, b.name AS bname,r.`name` AS rname,r.`isdelete` AS risdelete , b.`isdelete` AS bisdelete
    FROM t_xietong_menu_button b
    INNER JOIN t_xietong_role_button rb ON b.`id` = rb.`bid`
    INNER JOIN t_xietong_role r ON rb.`rid` = r.`id`
    WHERE
    FIND_IN_SET(b.`id`,getMeunButtonTreeChild((SELECT b.`id` FROM t_xietong_menu_button b WHERE b.`name` = #{cname})))
    AND b.`isdelete`='1' AND r.`isdelete`='1' AND r.`role_flag`='1' AND rb.`status` = '1' AND r.`id`=#{id} AND r.`role_flag` = "1" ORDER BY b.`sort`
  </select>




  <!--SELECT b.*,r.*,b.id AS bid ,r.id AS rrid, b.name AS bname,r.`name` AS rname,r.`isdelete` AS risdelete , b.`isdelete` AS bisdelete-->
  <!--FROM t_xietong_menu_button b-->
  <!--INNER JOIN t_xietong_role_button rb ON b.`id` = rb.`bid`-->
  <!--INNER JOIN t_xietong_role r ON rb.`rid` = r.`id` WHERE-->
  <!--FIND_IN_SET(b.`id`,getMeunButtonTreeChild((SELECT b.`id` FROM t_xietong_menu_button b WHERE b.`name` = #{cname})))-->
  <!--AND b.`isdelete`='1' AND r.`isdelete`='1' AND r.`role_flag`='1' AND rb.`status` = '1' AND r.`id`=#{id} ORDER BY b.`sort`-->

  <select id="selectRoleByStatus" resultMap="BaseResultMap">
    SELECT * FROM  t_xietong_role r WHERE r.`role_flag` = #{status} AND r.`isdelete`="1" order by name
     LIMIT #{pageNo},#{pageSize}
  </select>

   <select id="countRoleByStatus" resultType="int">
       SELECT COUNT(r.`id`) FROM  t_xietong_role r WHERE r.`role_flag` = #{status} AND r.`isdelete` = "1"
   </select>

























   <!--一用户多角色-->

  <select id="findMenuButtonsByRoleIds" resultMap="menuButtons">
  SELECT DISTINCT b.*,r.*,b.id AS bid ,r.id AS rrid, b.name AS bname,r.`name` AS rname,r.`isdelete` AS risdelete , b.`isdelete` AS bisdelete
    FROM t_xietong_menu_button b
    INNER JOIN t_xietong_role_button rb ON b.`id` = rb.`bid`
    INNER JOIN t_xietong_role r ON rb.`rid` = r.`id`
    WHERE
    FIND_IN_SET(b.`id`,getMeunButtonTreeChild((SELECT b.`id` FROM t_xietong_menu_button b WHERE b.`name` = #{cname})))
    AND b.`isdelete`='1' AND r.`isdelete`='1' AND r.`role_flag`='1' AND rb.`status` = '1' AND
    r.`id` in
    <foreach item="rids" index="index" collection="rids" open="(" separator="," close=")">
            #{rids}
    </foreach>
    AND r.`role_flag` = "1" ORDER BY b.`sort`
  </select>
  </mapper>