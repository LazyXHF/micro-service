<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.portjs.base.dao.InvestmentPlanMapper" >
  <resultMap id="BaseResultMap" type="com.portjs.base.entity.InvestmentPlan" >
    <id column="Id" property="id" jdbcType="VARCHAR" />
    <result column="plan_num" property="planNum" jdbcType="VARCHAR" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="project_type" property="projectType" jdbcType="VARCHAR" />
    <result column="project_desc" property="projectDesc" jdbcType="VARCHAR" />
    <result column="organization" property="organization" jdbcType="VARCHAR" />
    <result column="investor" property="investor" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="construction_mode" property="constructionMode" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="construction_mode" property="constructionMode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, plan_num, project_id, project_name, project_type, project_desc, organization, 
    investor, amount, construction_mode, remark, create_time, update_time, delete_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.portjs.base.entity.InvestmentPlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from investment_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from investment_plan
    where Id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from investment_plan
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.portjs.base.entity.InvestmentPlanExample" >
    delete from investment_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.portjs.base.entity.InvestmentPlan" >
    insert into investment_plan (Id, plan_num, project_id, 
      project_name, project_type, project_desc, 
      organization, investor, amount, 
      construction_mode, remark, create_time, 
      update_time, delete_time)
    values (#{id,jdbcType=VARCHAR}, #{planNum,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, 
      #{projectName,jdbcType=VARCHAR}, #{projectType,jdbcType=VARCHAR}, #{projectDesc,jdbcType=VARCHAR}, 
      #{organization,jdbcType=VARCHAR}, #{investor,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{constructionMode,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleteTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.portjs.base.entity.InvestmentPlan" >
    insert into investment_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="planNum != null" >
        plan_num,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="projectType != null" >
        project_type,
      </if>
      <if test="projectDesc != null" >
        project_desc,
      </if>
      <if test="organization != null" >
        organization,
      </if>
      <if test="investor != null" >
        investor,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="constructionMode != null" >
        construction_mode,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="planNum != null" >
        #{planNum,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="projectDesc != null" >
        #{projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="organization != null" >
        #{organization,jdbcType=VARCHAR},
      </if>
      <if test="investor != null" >
        #{investor,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="constructionMode != null" >
        #{constructionMode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.portjs.base.entity.InvestmentPlanExample" resultType="java.lang.Integer" >
    select count(*) from investment_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update investment_plan
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.planNum != null" >
        plan_num = #{record.planNum,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectName != null" >
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectType != null" >
        project_type = #{record.projectType,jdbcType=VARCHAR},
      </if>
      <if test="record.projectDesc != null" >
        project_desc = #{record.projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.organization != null" >
        organization = #{record.organization,jdbcType=VARCHAR},
      </if>
      <if test="record.investor != null" >
        investor = #{record.investor,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.constructionMode != null" >
        construction_mode = #{record.constructionMode,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteTime != null" >
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update investment_plan
    set Id = #{record.id,jdbcType=VARCHAR},
      plan_num = #{record.planNum,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      project_type = #{record.projectType,jdbcType=VARCHAR},
      project_desc = #{record.projectDesc,jdbcType=VARCHAR},
      organization = #{record.organization,jdbcType=VARCHAR},
      investor = #{record.investor,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      construction_mode = #{record.constructionMode,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.portjs.base.entity.InvestmentPlan" >
    update investment_plan
    <set >
      <if test="planNum != null" >
        plan_num = #{planNum,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        project_type = #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="projectDesc != null" >
        project_desc = #{projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="organization != null" >
        organization = #{organization,jdbcType=VARCHAR},
      </if>
      <if test="investor != null" >
        investor = #{investor,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="constructionMode != null" >
        construction_mode = #{constructionMode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.portjs.base.entity.InvestmentPlan" >
    update investment_plan
    set plan_num = #{planNum,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      project_type = #{projectType,jdbcType=VARCHAR},
      project_desc = #{projectDesc,jdbcType=VARCHAR},
      organization = #{organization,jdbcType=VARCHAR},
      investor = #{investor,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      construction_mode = #{constructionMode,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectCountByExample" parameterType="com.portjs.base.entity.InvestmentPlan" resultType="int">
    select count(id) from investment_plan
    <where>
      delete_time is null
      <if test="projectName!=null  and projectName!=''">
        and project_name like "%"#{projectName,jdbcType=VARCHAR}"%"
      </if>
      <if test="projectType!=null  and projectType!=''">
        and project_type = #{projectType,jdbcType=VARCHAR}
      </if>
      <if test="investor!=null  and investor!=''">
        and investor = #{investor,jdbcType=VARCHAR}
      </if>
      <if test="organization!=null  and organization!=''">
        and organization = #{organization,jdbcType=VARCHAR}
      </if>
      <if test="constructionMode!=null  and constructionMode!=''">
        and construction_mode = #{constructionMode,jdbcType=VARCHAR}
      </if>
      <if test="amount!=null">
        and amount = #{amount}
      </if>
    </where>
  </select>

  <select id="selectByPage" parameterType="com.portjs.base.entity.InvestmentPlan" resultMap="BaseResultMap">
    select * from investment_plan
    <where>
      delete_time is null
      <if test="projectName!=null  and projectName!=''">
        and project_name like "%"#{projectName,jdbcType=VARCHAR}"%"
      </if>
      <if test="projectType!=null  and projectType!=''">
        and project_type = #{projectType,jdbcType=VARCHAR}
      </if>
      <if test="investor!=null  and investor!=''">
        and investor = #{investor,jdbcType=VARCHAR}
      </if>
      <if test="organization!=null  and organization!=''">
        and organization = #{organization,jdbcType=VARCHAR}
      </if>
      <if test="constructionMode!=null  and constructionMode!=''">
        and construction_mode = #{constructionMode,jdbcType=VARCHAR}
      </if>
      <if test="amount!=null">
        and amount = #{amount}
      </if>
    </where>
    order by create_time desc
    limit #{rowNum},#{pageCount}
  </select>

  <select id="queryProjectPlan" resultMap="BaseResultMap" parameterType="java.lang.String" >
     select p.* from investment_plan p where id not in(select investment_id from project_application)
  </select>

  <select id="queryProjectPlanInfo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
   Id, plan_num, project_id, project_name, project_type, project_desc, organization,
    investor, amount, construction_mode, remark, create_time, update_time, delete_time,construction_mode
    from investment_plan
    where Id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="queryPlans" resultType="String">
    select
    DISTINCT investor
    from investment_plan where investor!=''
    ORDER  BY create_time
  </select>


</mapper>