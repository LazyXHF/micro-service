<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.portjs.base.dao.BusinessDictionaryMapper">
    <resultMap id="BaseResultMap" type="com.portjs.base.entity.BusinessDictionary">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="project_schedule" property="projectSchedule" jdbcType="VARCHAR"/>
        <result column="project_node" property="projectNode" jdbcType="VARCHAR"/>
        <result column="project_node_name" property="projectNodeName" jdbcType="VARCHAR"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="alternate1" property="alternate1" jdbcType="VARCHAR"/>
        <result column="alternate2" property="alternate2" jdbcType="VARCHAR"/>
        <result column="alternate3" property="alternate3" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, project_schedule, project_node, project_node_name, sort, alternate1, alternate2, 
    alternate3
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.portjs.base.entity.BusinessDictionaryExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from business_dictionary
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from business_dictionary
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from business_dictionary
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.portjs.base.entity.BusinessDictionaryExample">
        delete from business_dictionary
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.portjs.base.entity.BusinessDictionary">
    insert into business_dictionary (id, project_schedule, project_node, 
      project_node_name, sort, alternate1, 
      alternate2, alternate3)
    values (#{id,jdbcType=VARCHAR}, #{projectSchedule,jdbcType=VARCHAR}, #{projectNode,jdbcType=VARCHAR}, 
      #{projectNodeName,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{alternate1,jdbcType=VARCHAR}, 
      #{alternate2,jdbcType=VARCHAR}, #{alternate3,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.portjs.base.entity.BusinessDictionary">
        insert into business_dictionary
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectSchedule != null">
                project_schedule,
            </if>
            <if test="projectNode != null">
                project_node,
            </if>
            <if test="projectNodeName != null">
                project_node_name,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="alternate1 != null">
                alternate1,
            </if>
            <if test="alternate2 != null">
                alternate2,
            </if>
            <if test="alternate3 != null">
                alternate3,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="projectSchedule != null">
                #{projectSchedule,jdbcType=VARCHAR},
            </if>
            <if test="projectNode != null">
                #{projectNode,jdbcType=VARCHAR},
            </if>
            <if test="projectNodeName != null">
                #{projectNodeName,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="alternate1 != null">
                #{alternate1,jdbcType=VARCHAR},
            </if>
            <if test="alternate2 != null">
                #{alternate2,jdbcType=VARCHAR},
            </if>
            <if test="alternate3 != null">
                #{alternate3,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.portjs.base.entity.BusinessDictionaryExample"
            resultType="java.lang.Integer">
        select count(*) from business_dictionary
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update business_dictionary
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.projectSchedule != null">
                project_schedule = #{record.projectSchedule,jdbcType=VARCHAR},
            </if>
            <if test="record.projectNode != null">
                project_node = #{record.projectNode,jdbcType=VARCHAR},
            </if>
            <if test="record.projectNodeName != null">
                project_node_name = #{record.projectNodeName,jdbcType=VARCHAR},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.alternate1 != null">
                alternate1 = #{record.alternate1,jdbcType=VARCHAR},
            </if>
            <if test="record.alternate2 != null">
                alternate2 = #{record.alternate2,jdbcType=VARCHAR},
            </if>
            <if test="record.alternate3 != null">
                alternate3 = #{record.alternate3,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update business_dictionary
        set id = #{record.id,jdbcType=VARCHAR},
        project_schedule = #{record.projectSchedule,jdbcType=VARCHAR},
        project_node = #{record.projectNode,jdbcType=VARCHAR},
        project_node_name = #{record.projectNodeName,jdbcType=VARCHAR},
        sort = #{record.sort,jdbcType=INTEGER},
        alternate1 = #{record.alternate1,jdbcType=VARCHAR},
        alternate2 = #{record.alternate2,jdbcType=VARCHAR},
        alternate3 = #{record.alternate3,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.portjs.base.entity.BusinessDictionary">
        update business_dictionary
        <set>
            <if test="projectSchedule != null">
                project_schedule = #{projectSchedule,jdbcType=VARCHAR},
            </if>
            <if test="projectNode != null">
                project_node = #{projectNode,jdbcType=VARCHAR},
            </if>
            <if test="projectNodeName != null">
                project_node_name = #{projectNodeName,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="alternate1 != null">
                alternate1 = #{alternate1,jdbcType=VARCHAR},
            </if>
            <if test="alternate2 != null">
                alternate2 = #{alternate2,jdbcType=VARCHAR},
            </if>
            <if test="alternate3 != null">
                alternate3 = #{alternate3,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.portjs.base.entity.BusinessDictionary">
    update business_dictionary
    set project_schedule = #{projectSchedule,jdbcType=VARCHAR},
      project_node = #{projectNode,jdbcType=VARCHAR},
      project_node_name = #{projectNodeName,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      alternate1 = #{alternate1,jdbcType=VARCHAR},
      alternate2 = #{alternate2,jdbcType=VARCHAR},
      alternate3 = #{alternate3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <select id="selectByNode" resultMap="BaseResultMap">
        SELECT * FROM `business_dictionary`
        WHERE 1=1
        <if test="projectNode!=null and projectNode!=''">
            and #{projectNode} LIKE CONCAT('%',project_node,'%')
        </if>
        ORDER BY 'sort'
    </select>

    <select id="selectAllProjectSchedule" resultMap="BaseResultMap">
        SELECT DISTINCT(project_schedule) FROM `business_dictionary` ORDER BY project_schedule
    </select>
</mapper>