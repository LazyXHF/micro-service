<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.portjs.base.dao.InternalPersionResourceMapper">
  <resultMap id="BaseResultMap" type="com.portjs.base.entity.InternalPersionResource">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="persion_name" jdbcType="VARCHAR" property="persionName" />
    <result column="unnit" jdbcType="VARCHAR" property="unnit" />
    <result column="sort" jdbcType="VARCHAR" property="sort" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="enable" jdbcType="CHAR" property="enable" />
    <result column="back_up1" jdbcType="VARCHAR" property="backUp1" />
    <result column="back_up2" jdbcType="VARCHAR" property="backUp2" />
    <result column="back_up3" jdbcType="VARCHAR" property="backUp3" />
    <result column="back_up4" jdbcType="VARCHAR" property="backUp4" />
    <result column="back_up5" jdbcType="VARCHAR" property="backUp5" />
    <result column="back_up6" jdbcType="VARCHAR" property="backUp6" />
    <result column="back_up7" jdbcType="VARCHAR" property="backUp7" />
    <result column="back_up8" jdbcType="VARCHAR" property="backUp8" />
    <result column="back_up9" jdbcType="VARCHAR" property="backUp9" />
    <result column="back_up10" jdbcType="VARCHAR" property="backUp10" />

  </resultMap>
  <sql id="Base_Column_List">
    id, project_id, persion_name, unnit, type, status,sort, enable, back_up1, back_up2, back_up3,
    back_up4, back_up5, back_up6, back_up7, back_up8, back_up9, back_up10
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from internal_persons_resource
    where id = #{id,jdbcType=VARCHAR}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from internal_persons_resource
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insertPersionInfo" parameterType="com.portjs.base.entity.InternalPersionResource">
    insert into internal_persons_resource (id, project_id, persion_name, 
      unnit, type, status, 
      enable, back_up1, back_up2, 
      back_up3, back_up4, back_up5, 
      back_up6, back_up7, back_up8, 
      back_up9, back_up10)
    values (#{id,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{persionName,jdbcType=VARCHAR}, 
      #{unnit,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{enable,jdbcType=CHAR}, #{backUp1,jdbcType=VARCHAR}, #{backUp2,jdbcType=VARCHAR}, 
      #{backUp3,jdbcType=VARCHAR}, #{backUp4,jdbcType=VARCHAR}, #{backUp5,jdbcType=VARCHAR}, 
      #{backUp6,jdbcType=VARCHAR}, #{backUp7,jdbcType=VARCHAR}, #{backUp8,jdbcType=VARCHAR}, 
      #{backUp9,jdbcType=VARCHAR}, #{backUp10,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.portjs.base.entity.InternalPersionResource">
    insert into internal_persons_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="persionName != null">
        persion_name,
      </if>
      <if test="unnit != null">
        unnit,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="backUp1 != null">
        back_up1,
      </if>
      <if test="backUp2 != null">
        back_up2,
      </if>
      <if test="backUp3 != null">
        back_up3,
      </if>
      <if test="backUp4 != null">
        back_up4,
      </if>
      <if test="backUp5 != null">
        back_up5,
      </if>
      <if test="backUp6 != null">
        back_up6,
      </if>
      <if test="backUp7 != null">
        back_up7,
      </if>
      <if test="backUp8 != null">
        back_up8,
      </if>
      <if test="backUp9 != null">
        back_up9,
      </if>
      <if test="backUp10 != null">
        back_up10,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="persionName != null">
        #{persionName,jdbcType=VARCHAR},
      </if>
      <if test="unnit != null">
        #{unnit,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=CHAR},
      </if>
      <if test="backUp1 != null">
        #{backUp1,jdbcType=VARCHAR},
      </if>
      <if test="backUp2 != null">
        #{backUp2,jdbcType=VARCHAR},
      </if>
      <if test="backUp3 != null">
        #{backUp3,jdbcType=VARCHAR},
      </if>
      <if test="backUp4 != null">
        #{backUp4,jdbcType=VARCHAR},
      </if>
      <if test="backUp5 != null">
        #{backUp5,jdbcType=VARCHAR},
      </if>
      <if test="backUp6 != null">
        #{backUp6,jdbcType=VARCHAR},
      </if>
      <if test="backUp7 != null">
        #{backUp7,jdbcType=VARCHAR},
      </if>
      <if test="backUp8 != null">
        #{backUp8,jdbcType=VARCHAR},
      </if>
      <if test="backUp9 != null">
        #{backUp9,jdbcType=VARCHAR},
      </if>
      <if test="backUp10 != null">
        #{backUp10,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.portjs.base.entity.InternalPersionResource">
    update internal_persons_resource
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="persionName != null">
        persion_name = #{persionName,jdbcType=VARCHAR},
      </if>
      <if test="unnit != null">
        unnit = #{unnit,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=CHAR},
      </if>
      <if test="backUp1 != null">
        back_up1 = #{backUp1,jdbcType=VARCHAR},
      </if>
      <if test="backUp2 != null">
        back_up2 = #{backUp2,jdbcType=VARCHAR},
      </if>
      <if test="backUp3 != null">
        back_up3 = #{backUp3,jdbcType=VARCHAR},
      </if>
      <if test="backUp4 != null">
        back_up4 = #{backUp4,jdbcType=VARCHAR},
      </if>
      <if test="backUp5 != null">
        back_up5 = #{backUp5,jdbcType=VARCHAR},
      </if>
      <if test="backUp6 != null">
        back_up6 = #{backUp6,jdbcType=VARCHAR},
      </if>
      <if test="backUp7 != null">
        back_up7 = #{backUp7,jdbcType=VARCHAR},
      </if>
      <if test="backUp8 != null">
        back_up8 = #{backUp8,jdbcType=VARCHAR},
      </if>
      <if test="backUp9 != null">
        back_up9 = #{backUp9,jdbcType=VARCHAR},
      </if>
      <if test="backUp10 != null">
        back_up10 = #{backUp10,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.portjs.base.entity.InternalPersionResource">
    update internal_persons_resource
    set project_id = #{projectId,jdbcType=VARCHAR},
      persion_name = #{persionName,jdbcType=VARCHAR},
      unnit = #{unnit,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=CHAR},
      back_up1 = #{backUp1,jdbcType=VARCHAR},
      back_up2 = #{backUp2,jdbcType=VARCHAR},
      back_up3 = #{backUp3,jdbcType=VARCHAR},
      back_up4 = #{backUp4,jdbcType=VARCHAR},
      back_up5 = #{backUp5,jdbcType=VARCHAR},
      back_up6 = #{backUp6,jdbcType=VARCHAR},
      back_up7 = #{backUp7,jdbcType=VARCHAR},
      back_up8 = #{backUp8,jdbcType=VARCHAR},
      back_up9 = #{backUp9,jdbcType=VARCHAR},
      back_up10 = #{backUp10,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>