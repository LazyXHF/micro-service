<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.portjs.base.dao.ProjectApplicationMapper" >
  <resultMap id="BaseResultMap" type="com.portjs.base.entity.ProjectApplication" >
    <id column="Id" property="id" jdbcType="VARCHAR" />
    <result column="project_code" property="projectCode" jdbcType="VARCHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="project_type" property="projectType" jdbcType="VARCHAR" />
    <result column="leval" property="leval" jdbcType="VARCHAR" />
    <result column="project_desc" property="projectDesc" jdbcType="VARCHAR" />
    <result column="organization" property="organization" jdbcType="VARCHAR" />
    <result column="range1" property="range1" jdbcType="VARCHAR" />
    <result column="kickoff_date" property="kickoffDate" jdbcType="TIMESTAMP" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="enable" property="enable" jdbcType="VARCHAR" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="back_up9" property="backUp9" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, project_code, project_name, project_type, leval, project_desc, organization, 
    range1, kickoff_date, creater, create_time, update_time, enable, file_url, status, 
    back_up9
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.portjs.base.entity.ProjectApplicationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from project_application
    where Id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from project_application
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.portjs.base.entity.ProjectApplicationExample" >
    delete from project_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.portjs.base.entity.ProjectApplication" >
    insert into project_application (Id, project_code, project_name, 
      project_type, leval, project_desc, 
      organization, range1, kickoff_date, 
      creater, create_time, update_time, 
      enable, file_url, status, 
      back_up9)
    values (#{id,jdbcType=VARCHAR}, #{projectCode,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, 
      #{projectType,jdbcType=VARCHAR}, #{leval,jdbcType=VARCHAR}, #{projectDesc,jdbcType=VARCHAR}, 
      #{organization,jdbcType=VARCHAR}, #{range1,jdbcType=VARCHAR}, #{kickoffDate,jdbcType=TIMESTAMP}, 
      #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{enable,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{backUp9,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.portjs.base.entity.ProjectApplication" >
    insert into project_application
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="projectCode != null" >
        project_code,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="projectType != null" >
        project_type,
      </if>
      <if test="leval != null" >
        leval,
      </if>
      <if test="projectDesc != null" >
        project_desc,
      </if>
      <if test="organization != null" >
        organization,
      </if>
      <if test="range1 != null" >
        range1,
      </if>
      <if test="kickoffDate != null" >
        kickoff_date,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="fileUrl != null" >
        file_url,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="backUp9 != null" >
        back_up9,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectCode != null" >
        #{projectCode,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="leval != null" >
        #{leval,jdbcType=VARCHAR},
      </if>
      <if test="projectDesc != null" >
        #{projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="organization != null" >
        #{organization,jdbcType=VARCHAR},
      </if>
      <if test="range1 != null" >
        #{range1,jdbcType=VARCHAR},
      </if>
      <if test="kickoffDate != null" >
        #{kickoffDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="backUp9 != null" >
        #{backUp9,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.portjs.base.entity.ProjectApplicationExample" resultType="java.lang.Integer" >
    select count(*) from project_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update project_application
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.projectCode != null" >
        project_code = #{record.projectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.projectName != null" >
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectType != null" >
        project_type = #{record.projectType,jdbcType=VARCHAR},
      </if>
      <if test="record.leval != null" >
        leval = #{record.leval,jdbcType=VARCHAR},
      </if>
      <if test="record.projectDesc != null" >
        project_desc = #{record.projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.organization != null" >
        organization = #{record.organization,jdbcType=VARCHAR},
      </if>
      <if test="record.range1 != null" >
        range1 = #{record.range1,jdbcType=VARCHAR},
      </if>
      <if test="record.kickoffDate != null" >
        kickoff_date = #{record.kickoffDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable,jdbcType=VARCHAR},
      </if>
      <if test="record.fileUrl != null" >
        file_url = #{record.fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.backUp9 != null" >
        back_up9 = #{record.backUp9,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update project_application
    set Id = #{record.id,jdbcType=VARCHAR},
      project_code = #{record.projectCode,jdbcType=VARCHAR},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      project_type = #{record.projectType,jdbcType=VARCHAR},
      leval = #{record.leval,jdbcType=VARCHAR},
      project_desc = #{record.projectDesc,jdbcType=VARCHAR},
      organization = #{record.organization,jdbcType=VARCHAR},
      range1 = #{record.range1,jdbcType=VARCHAR},
      kickoff_date = #{record.kickoffDate,jdbcType=TIMESTAMP},
      creater = #{record.creater,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      enable = #{record.enable,jdbcType=VARCHAR},
      file_url = #{record.fileUrl,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      back_up9 = #{record.backUp9,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.portjs.base.entity.ProjectApplication" >
    update project_application
    <set >
      <if test="projectCode != null" >
        project_code = #{projectCode,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        project_type = #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="leval != null" >
        leval = #{leval,jdbcType=VARCHAR},
      </if>
      <if test="projectDesc != null" >
        project_desc = #{projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="organization != null" >
        organization = #{organization,jdbcType=VARCHAR},
      </if>
      <if test="range1 != null" >
        range1 = #{range1,jdbcType=VARCHAR},
      </if>
      <if test="kickoffDate != null" >
        kickoff_date = #{kickoffDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="backUp9 != null" >
        back_up9 = #{backUp9,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.portjs.base.entity.ProjectApplication" >
    update project_application
    set project_code = #{projectCode,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      project_type = #{projectType,jdbcType=VARCHAR},
      leval = #{leval,jdbcType=VARCHAR},
      project_desc = #{projectDesc,jdbcType=VARCHAR},
      organization = #{organization,jdbcType=VARCHAR},
      range1 = #{range1,jdbcType=VARCHAR},
      kickoff_date = #{kickoffDate,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      back_up9 = #{backUp9,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>