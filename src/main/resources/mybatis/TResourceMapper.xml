<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.portjs.xietong.dao.TResourceMapper" >
  <resultMap id="BaseResultMap" type="com.portjs.base.entity.TResource" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="filename" property="filename" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="filesize" property="filesize" jdbcType="DOUBLE" />
    <result column="filetype" property="filetype" jdbcType="CHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="backup1" property="backup1" jdbcType="VARCHAR" />
    <result column="backup2" property="backup2" jdbcType="VARCHAR" />
    <result column="backup3" property="backup3" jdbcType="VARCHAR" />
    <result column="backup4" property="backup4" jdbcType="VARCHAR" />
    <result column="backup5" property="backup5" jdbcType="VARCHAR" />
    <result column="enable" property="enable" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, filename, url, filesize, filetype, createtime, creator, backup1, backup2, backup3, 
    backup4, backup5, enable
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.portjs.base.entity.TResourceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.portjs.base.entity.TResourceExample" >
    delete from t_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.portjs.base.entity.TResource" >
    insert into t_resource (id, filename, url, 
      filesize, filetype, createtime, 
      creator, backup1, backup2, 
      backup3, backup4, backup5, 
      enable)
    values (#{id,jdbcType=VARCHAR}, #{filename,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{filesize,jdbcType=DOUBLE}, #{filetype,jdbcType=CHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=VARCHAR}, #{backup1,jdbcType=VARCHAR}, #{backup2,jdbcType=VARCHAR}, 
      #{backup3,jdbcType=VARCHAR}, #{backup4,jdbcType=VARCHAR}, #{backup5,jdbcType=VARCHAR}, 
      #{enable,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.portjs.base.entity.TResource" >
    insert into t_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="filename != null" >
        filename,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="filesize != null" >
        filesize,
      </if>
      <if test="filetype != null" >
        filetype,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="backup1 != null" >
        backup1,
      </if>
      <if test="backup2 != null" >
        backup2,
      </if>
      <if test="backup3 != null" >
        backup3,
      </if>
      <if test="backup4 != null" >
        backup4,
      </if>
      <if test="backup5 != null" >
        backup5,
      </if>
      <if test="enable != null" >
        enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null" >
        #{filesize,jdbcType=DOUBLE},
      </if>
      <if test="filetype != null" >
        #{filetype,jdbcType=CHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="backup1 != null" >
        #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null" >
        #{backup2,jdbcType=VARCHAR},
      </if>
      <if test="backup3 != null" >
        #{backup3,jdbcType=VARCHAR},
      </if>
      <if test="backup4 != null" >
        #{backup4,jdbcType=VARCHAR},
      </if>
      <if test="backup5 != null" >
        #{backup5,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.portjs.base.entity.TResourceExample" resultType="java.lang.Integer" >
    select count(*) from t_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_resource
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.filename != null" >
        filename = #{record.filename,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.filesize != null" >
        filesize = #{record.filesize,jdbcType=DOUBLE},
      </if>
      <if test="record.filetype != null" >
        filetype = #{record.filetype,jdbcType=CHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.backup1 != null" >
        backup1 = #{record.backup1,jdbcType=VARCHAR},
      </if>
      <if test="record.backup2 != null" >
        backup2 = #{record.backup2,jdbcType=VARCHAR},
      </if>
      <if test="record.backup3 != null" >
        backup3 = #{record.backup3,jdbcType=VARCHAR},
      </if>
      <if test="record.backup4 != null" >
        backup4 = #{record.backup4,jdbcType=VARCHAR},
      </if>
      <if test="record.backup5 != null" >
        backup5 = #{record.backup5,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_resource
    set id = #{record.id,jdbcType=VARCHAR},
      filename = #{record.filename,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      filesize = #{record.filesize,jdbcType=DOUBLE},
      filetype = #{record.filetype,jdbcType=CHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      backup1 = #{record.backup1,jdbcType=VARCHAR},
      backup2 = #{record.backup2,jdbcType=VARCHAR},
      backup3 = #{record.backup3,jdbcType=VARCHAR},
      backup4 = #{record.backup4,jdbcType=VARCHAR},
      backup5 = #{record.backup5,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>