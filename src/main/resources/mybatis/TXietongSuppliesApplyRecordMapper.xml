<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.portjs.base.dao.TXietongSuppliesApplyRecordMapper" >
  <resultMap id="BaseResultMap" type="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="apply_id" property="applyId" jdbcType="VARCHAR" />
    <result column="owner_id" property="ownerId" jdbcType="VARCHAR" />
    <result column="rec_comment" property="recComment" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="isdelete" property="isdelete" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="iscc" property="iscc" jdbcType="INTEGER" />
    <result column="deal_time" property="dealTime" jdbcType="TIMESTAMP" />
    <result column="record_creator_id" property="creatorId" jdbcType="VARCHAR" />
    <result column="record_creator_name" property="creatorName" jdbcType="VARCHAR" />
    <result column="is_parallel" property="isParallel" jdbcType="INTEGER" />
    <result column="opinion" property="opinion" jdbcType="INTEGER" />
    <result column="is_read" property="isRead" jdbcType="INTEGER" />
    <result column="owner_name" property="ownerName" jdbcType="INTEGER"/>
    <result column="dep_name" property="departName" jdbcType="VARCHAR"/>
    <result column="apply_type" property="applyType" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, apply_id, owner_id, rec_comment, createtime, isdelete, status, iscc, deal_time, 
    record_creator_id, record_creator_name, is_parallel, opinion, is_read,owner_name
  </sql>

  <insert id="addApplyRecords" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    insert into t_xietong_supplies_apply_record (ID, apply_id, owner_id,
    rec_comment, createtime, isdelete,
    status, iscc, deal_time,
    record_creator_id, record_creator_name, is_parallel,
    opinion, is_read,owner_name,dep_name,apply_type)
    values (#{id,jdbcType=VARCHAR}, #{applyId,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR},
    #{recComment,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{isdelete,jdbcType=INTEGER},
    #{status,jdbcType=INTEGER}, #{iscc,jdbcType=INTEGER}, #{dealTime,jdbcType=TIMESTAMP},
    #{creatorId,jdbcType=VARCHAR}, #{creatorName,jdbcType=VARCHAR}, #{isParallel,jdbcType=INTEGER},
    #{opinion,jdbcType=INTEGER}, #{isRead,jdbcType=INTEGER},#{ownerName,jdbcType=INTEGER},#{departName,jdbcType=VARCHAR},#{applyType,jdbcType=INTEGER})
  </insert>

  <update id="updateapplyRecord" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    update t_xietong_supplies_apply_record
    set
    rec_comment = #{recComment,jdbcType=VARCHAR},
    status = #{status,jdbcType=INTEGER},
    deal_time = #{dealTime,jdbcType=TIMESTAMP},
    opinion = #{opinion,jdbcType=INTEGER},
    <if test="departName!= null and  departName!=''" >
     dep_name = #{departName,jdbcType=VARCHAR},
    </if>
    is_read = #{isRead,jdbcType=INTEGER}
    where id=#{id}
  </update>
  <update id="updateapplyRecordById" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    update t_xietong_supplies_apply_record
    set
    rec_comment = #{recComment,jdbcType=VARCHAR},
    status = #{status,jdbcType=INTEGER},
    deal_time = #{dealTime,jdbcType=TIMESTAMP},
    opinion = #{opinion,jdbcType=INTEGER},
    <if test="departName!= null and  departName!=''" >
      dep_name = #{departName,jdbcType=VARCHAR},
    </if>
    is_read = #{isRead,jdbcType=INTEGER}
    where id=#{id}
  </update>
 <!-- //仓库管理员专用更新状态方法-->
  <update id="updateapplyRecord1" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    update t_xietong_supplies_apply_record
    set
    status = #{status,jdbcType=INTEGER},
    deal_time = #{dealTime,jdbcType=TIMESTAMP},
    opinion = #{opinion,jdbcType=INTEGER},
    iscc=#{iscc,jdbcType=INTEGER},
    <if test="departName!= null and  departName!=''" >
      dep_name = #{departName,jdbcType=VARCHAR},
    </if>
    is_read = #{isRead,jdbcType=INTEGER}
    where apply_id=#{applyId} and owner_id=#{ownerId} and apply_type=1
  </update>
  <update id="updateapplyRecordCaiGouYuan" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    update t_xietong_supplies_apply_record
    set
    status = #{status,jdbcType=INTEGER},
    deal_time = #{dealTime,jdbcType=TIMESTAMP},
    <if test="departName!= null and  departName!=''" >
      dep_name = #{departName,jdbcType=VARCHAR},
    </if>
    is_read = #{isRead,jdbcType=INTEGER}
    where apply_id=#{applyId} and owner_id=#{ownerId}
  </update>

  <select id="queryhandleDetails" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_xietong_supplies_apply_record
    where apply_id = #{id,jdbcType=VARCHAR}
    order by createtime desc
  </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_xietong_supplies_apply_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <delete id="deleteSupplyApplyRecords" parameterType="java.lang.String" >
    delete from t_xietong_supplies_apply_record
    where apply_id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="addToRepository" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    insert into t_xietong_supplies_apply_record (ID, apply_id, owner_id,
    rec_comment, createtime, isdelete,
    status, iscc, deal_time,
    record_creator_id, record_creator_name, is_parallel,
    opinion, is_read)
    values (#{id,jdbcType=VARCHAR}, #{applyId,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR},
    #{recComment,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{isdelete,jdbcType=INTEGER},
    #{status,jdbcType=INTEGER}, #{iscc,jdbcType=INTEGER}, #{dealTime,jdbcType=TIMESTAMP},
    #{creatorId,jdbcType=VARCHAR}, #{creatorName,jdbcType=VARCHAR}, #{isParallel,jdbcType=INTEGER},
    #{opinion,jdbcType=INTEGER}, #{isRead,jdbcType=INTEGER})
  </insert>


  <delete id="deleteByExample" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecordExample" >
    delete from t_xietong_supplies_apply_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
<update id="updateSupplyRecords" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord">
  update t_xietong_supplies_apply_record set isDelete=1
  where apply_id=#{id}
</update>
  <insert id="insertSelective" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    insert into t_xietong_supplies_apply_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="applyId != null" >
        apply_id,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
      <if test="recComment != null" >
        rec_comment,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="isdelete != null" >
        isdelete,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="iscc != null" >
        iscc,
      </if>
      <if test="dealTime != null" >
        deal_time,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="creatorName != null" >
        creator_name,
      </if>
      <if test="isParallel != null" >
        is_parallel,
      </if>
      <if test="opinion != null" >
        opinion,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="applyId != null" >
        #{applyId,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="recComment != null" >
        #{recComment,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="iscc != null" >
        #{iscc,jdbcType=INTEGER},
      </if>
      <if test="dealTime != null" >
        #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="creatorName != null" >
        #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="isParallel != null" >
        #{isParallel,jdbcType=INTEGER},
      </if>
      <if test="opinion != null" >
        #{opinion,jdbcType=INTEGER},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecordExample" resultType="java.lang.Integer" >
    select count(*) from t_xietong_supplies_apply_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_xietong_supplies_apply_record
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.applyId != null" >
        apply_id = #{record.applyId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null" >
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.recComment != null" >
        rec_comment = #{record.recComment,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isdelete != null" >
        isdelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.iscc != null" >
        iscc = #{record.iscc,jdbcType=INTEGER},
      </if>
      <if test="record.dealTime != null" >
        deal_time = #{record.dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null" >
        creator_id = #{record.creatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorName != null" >
        creator_name = #{record.creatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.isParallel != null" >
        is_parallel = #{record.isParallel,jdbcType=INTEGER},
      </if>
      <if test="record.opinion != null" >
        opinion = #{record.opinion,jdbcType=INTEGER},
      </if>
      <if test="record.isRead != null" >
        is_read = #{record.isRead,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    update t_xietong_supplies_apply_record
    <set >
      <if test="applyId != null" >
        apply_id = #{applyId,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="recComment != null" >
        rec_comment = #{recComment,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdelete != null" >
        isdelete = #{isdelete,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="iscc != null" >
        iscc = #{iscc,jdbcType=INTEGER},
      </if>
      <if test="dealTime != null" >
        deal_time = #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="creatorName != null" >
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="isParallel != null" >
        is_parallel = #{isParallel,jdbcType=INTEGER},
      </if>
      <if test="opinion != null" >
        opinion = #{opinion,jdbcType=INTEGER},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    update t_xietong_supplies_apply_record
    set apply_id = #{applyId,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      rec_comment = #{recComment,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      isdelete = #{isdelete,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      iscc = #{iscc,jdbcType=INTEGER},
      deal_time = #{dealTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=VARCHAR},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      is_parallel = #{isParallel,jdbcType=INTEGER},
      opinion = #{opinion,jdbcType=INTEGER},
      is_read = #{isRead,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryBanGongXiangqing" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" resultMap="BaseResultMap">
    SELECT  * from t_xietong_supplies_apply_record
    where apply_id=#{id} and owner_id=#{ownerId} and apply_type=0
  </select>
  <select id="queryBanGongXiangqing1" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" resultMap="BaseResultMap">
    SELECT  * from t_xietong_supplies_apply_record
    where apply_id=#{id} and owner_id=#{ownerId} and apply_type=1
  </select>
  <select id="queryPucharseStatus" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" resultType="Integer">
    SELECT status from t_xietong_supplies_apply_record
    where apply_id=#{id} and owner_id=#{ownerId} and apply_type=2
  </select>
  <!-- 这个是用来查询办公opinion-->
  <select id="queryOpinion" parameterType="String" resultType="int">
    select opinion from t_xietong_supplies_apply_record
    WHERE apply_id=#{id} AND owner_id=#{ownerId} and apply_type=0
  </select>

  <select id="queryRecordId" parameterType="String" resultType="String">
    select id from t_xietong_supplies_apply_record
    WHERE apply_id=#{applyId} AND owner_id=#{ownerId} and apply_type=1
  </select>
  <!--
   旧版查询办公室id的 sql  避免多条重复id出现  采用 下面的
   select id from t_xietong_supplies_apply_record
   WHERE apply_id=#{applyId} AND owner_id=#{ownerId} and apply_type=0
  -->
 <!-- 这个是用来查询办公室记录表id-->
  <select id="queryRecordIdBanGong" parameterType="String" resultType="String">
     select id from (select id from t_xietong_supplies_apply_record
        WHERE apply_id=#{applyId} AND owner_id=#{ownerId} and apply_type=0 order by createtime desc ) as r GROUP BY #{ownerId}
  </select>

  <!-- 这个是用来查询采购员记录表id-->
 <!-- select id from t_xietong_supplies_apply_record
  WHERE apply_id=#{id} AND owner_id=#{caigouyuanId} and apply_type=2-->
  <select id="queryRecordCaiGouId" parameterType="String" resultType="String">
 select id from (select id from t_xietong_supplies_apply_record
        WHERE apply_id=#{id} AND owner_id=#{caigouyuanId} and apply_type=2 order by createtime desc ) as r GROUP BY #{caigouyuanId}
  </select>


  <!-- 这个是用来查询办公室记录表-->
  <select id="queryApplyRecords" resultType="String" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    select ar.owner_id as ownerId ,ar.status as arStatus,ar.rec_comment as reccommnet ,ar.opinion as aropinion, ar.apply_type as arApplyType,ar.owner_name as ownerName,ar.dep_name as departName
    from t_xietong_supplies_apply_record ar
    <where>
      <if test="id !=null and id!=''">
          ar.apply_id=#{id}
      </if>
      <if test="ownerId !=null and ownerId!=''">
        and  ar.owner_id=#{ownerId}
      </if>

    </where>
  </select>

  <update id="updateOfficerRecord" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    update t_xietong_supplies_apply_record
    set
    opinion = #{opinion,jdbcType=INTEGER},status =1,
    is_parallel=#{isParallel}
    where apply_id = #{applyId,jdbcType=VARCHAR} and owner_id=#{ownerId}  and status=0
  </update>

  <select id="querySupplyApplyRecord" parameterType="String" resultMap="BaseResultMap">
    select * from t_xietong_supplies_apply_record
    WHERE owner_id=#{ownerId}
  </select>
  <update id="updateBanGongshiStatus" parameterType="com.portjs.base.entity.TXietongSuppliesApplyRecord" >
    update t_xietong_supplies_apply_record
    set
    status =0
    where apply_id = #{id} and owner_id=#{nextPeopleId}
  </update>
  <!--select status from t_xietong_supplies_apply_record
  WHERE apply_id=#{id} and owner_id=#{ownerId} and is_parallel=0;-->
  <select id="queryStatus" parameterType="String" resultType="int">

    select ar.status from (select * from t_xietong_supplies_apply_record WHERE apply_id=#{id} and owner_id=#{ownerId} order by createtime DESC) as ar  GROUP BY #{ownerId}
  </select>

  <select id="querySupplyApplyRecord2" resultMap="BaseResultMap">
    select * from t_xietong_supplies_apply_record
    WHERE owner_id=#{ownerId}
    limit #{rowNum},#{pageCount}
  </select>

  <update id="updateApplyStatus" parameterType="String" >
    update t_xietong_supplies_apply_record
    set
    status =1
    where apply_id = #{id} and owner_id=#{applyId}
  </update>
</mapper>