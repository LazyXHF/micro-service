<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.mgt.dao.TXietongDepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.project.mgt.entity.TXietongDepartment" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="isdelete" property="isdelete" jdbcType="SMALLINT" />
    <result column="createtime" property="createtime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="leader_id" property="leaderId" jdbcType="VARCHAR" />
    <result column="vice_leader_id" property="viceLeaderId" jdbcType="VARCHAR" />
    <result column="isleaf" property="isleaf" jdbcType="INTEGER" />
    <result column="parentName" property="parentName" jdbcType="VARCHAR"/>
    <result column="leaderName" property="leaderName" jdbcType="VARCHAR"/>
    <result column="viceName" property="viceName" jdbcType="VARCHAR"/>
    <result column="lstatus" property="lstatus" jdbcType="VARCHAR"/>
    <result column="vstatus" property="vstatus" jdbcType="VARCHAR"/>
    <result column="pingyin" property="pingyin" jdbcType="VARCHAR"/>

  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, parent_id, isdelete, createtime, sort, leader_id, vice_leader_id, isleaf,pingyin
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.project.mgt.entity.TXietongDepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_xietong_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_xietong_department
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_xietong_department
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.project.mgt.entity.TXietongDepartmentExample" >
    delete from t_xietong_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.project.mgt.entity.TXietongDepartment" >
    insert into t_xietong_department (id, name, parent_id, 
      isdelete, createtime, sort, 
      leader_id, vice_leader_id, isleaf,pingyin
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{isdelete,jdbcType=SMALLINT}, #{createtime,jdbcType=TIMESTAMP}, #{sort,jdbcType=INTEGER}, 
      #{leaderId,jdbcType=VARCHAR}, #{viceLeaderId,jdbcType=VARCHAR}, #{isleaf,jdbcType=INTEGER},#{pingyin,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.project.mgt.entity.TXietongDepartment" >
    insert into t_xietong_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="isdelete != null" >
        isdelete,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="leaderId != null" >
        leader_id,
      </if>
      <if test="viceLeaderId != null" >
        vice_leader_id,
      </if>
      <if test="isleaf != null" >
        isleaf,
      </if>
      <if test="pingyin != null" >
        pingyin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="leaderId != null" >
        #{leaderId,jdbcType=VARCHAR},
      </if>
      <if test="viceLeaderId != null" >
        #{viceLeaderId,jdbcType=VARCHAR},
      </if>
      <if test="isleaf != null" >
        #{isleaf,jdbcType=INTEGER},
      </if>
       <if test="pingyin != null" >
        #{pingyin,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.project.mgt.entity.TXietongDepartmentExample" resultType="java.lang.Integer" >
    select count(*) from t_xietong_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_xietong_department
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null" >
        isdelete = #{record.isdelete,jdbcType=SMALLINT},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.leaderId != null" >
        leader_id = #{record.leaderId,jdbcType=VARCHAR},
      </if>
      <if test="record.viceLeaderId != null" >
        vice_leader_id = #{record.viceLeaderId,jdbcType=VARCHAR},
      </if>
      <if test="record.isleaf != null" >
        isleaf = #{record.isleaf,jdbcType=INTEGER},
      </if>
        <if test="record.pingyin != null" >
          pingyin = #{record.pingyin,jdbcType=VARCHAR},
      </if>

    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_xietong_department
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      isdelete = #{record.isdelete,jdbcType=SMALLINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      sort = #{record.sort,jdbcType=INTEGER},
      leader_id = #{record.leaderId,jdbcType=VARCHAR},
      vice_leader_id = #{record.viceLeaderId,jdbcType=VARCHAR},
      isleaf = #{record.isleaf,jdbcType=INTEGER},
      pingyin = #{record.pingyin,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.mgt.entity.TXietongDepartment" >
    update t_xietong_department
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        isdelete = #{isdelete,jdbcType=SMALLINT},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="leaderId != null" >
        leader_id = #{leaderId,jdbcType=VARCHAR},
      </if>
      <if test="viceLeaderId != null" >
        vice_leader_id = #{viceLeaderId,jdbcType=VARCHAR},
      </if>
      <if test="isleaf != null" >
        isleaf = #{isleaf,jdbcType=INTEGER},
      </if>
       <if test="pingyin != null" >
         pingyin = #{pingyin,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.mgt.entity.TXietongDepartment" >
    update t_xietong_department
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=SMALLINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      sort = #{sort,jdbcType=INTEGER},
      leader_id = #{leaderId,jdbcType=VARCHAR},
      vice_leader_id = #{viceLeaderId,jdbcType=VARCHAR},
      isleaf = #{isleaf,jdbcType=INTEGER},
       pingyin = #{pingyin,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>


  <select id="findDepartmentByParentId" resultMap="BaseResultMap" parameterType="string">
    SELECT * FROM t_xietong_department d WHERE d.`parent_id`= #{parent_id}  AND d.`isdelete` = "1"  ORDER BY sort
  </select>


  <select id="findAllDepartment" resultMap="BaseResultMap">
  SELECT * FROM t_xietong_department d WHERE  d.`isdelete` = "1" AND d.`parent_id` != "null" ORDER BY sort
  </select>

  <update id="deleteDepartmentByName" parameterType="string">
    UPDATE t_xietong_department D SET D.isdelete = "0" WHERE D.`name` = #{name}
  </update>

  <select id="selectMaxSort" resultType="int">
    SELECT MAX(d.`sort`) AS maxsort FROM t_xietong_department d
  </select>

  <update id="updateDepartmentNameByName" >
   UPDATE t_xietong_department d SET d.`name` = #{newName} WHERE d.`name`=#{oldName}
  </update>


  <select id="selectDepartmentByName" resultMap="BaseResultMap">
    SELECT * FROM t_xietong_department d WHERE d.`name` = #{name} AND d.`isdelete` = "1"
  </select>

  <update id="updateDepartmentSort">
    UPDATE t_xietong_department d SET d.`sort` = #{sort} WHERE d.`id` = #{name}
  </update>

  <select id="findDepartmentById" resultMap="BaseResultMap">
    SELECT * FROM t_xietong_department d WHERE d.`id` = #{id} and d.`isdelete` ="1"
  </select>


  <update id="updateLeafById">
    UPDATE t_xietong_department d SET d.`isleaf` = #{leaf} WHERE id = #{id}
  </update>


  <select id="findDepartmentLeaf" resultMap="BaseResultMap">
    SELECT * FROM t_xietong_department d WHERE d.`isleaf` = '1' AND d.`isdelete` = '1' ORDER BY d.`sort`
  </select>



    <!--SELECT d.*,dd.`name` AS parentName FROM t_xietong_department d LEFT JOIN t_xietong_department  dd ON d.`parent_id` =  dd.`id`-->
    <!--WHERE FIND_IN_SET(d.`id`,-->
    <!--getMeunTreeChild((SELECT d.`id` FROM t_xietong_department d WHERE d.`name`=#{cname})))-->
    <!--AND d.`isdelete` = '1'  ORDER BY d.`sort`;-->

  <select id="findDepartmentTree" resultMap="BaseResultMap">
   SELECT d.*,dd.`name` AS parentName,l.`name_cn` AS leaderName ,v.`name_cn` AS viceName ,l.`status` AS lstatus ,v.`status` AS vstatus FROM t_xietong_department d
   LEFT JOIN t_xietong_department  dd ON d.`parent_id` =  dd.`id`
   LEFT JOIN t_xietong_user l ON l.`id` = d.`leader_id`
   LEFT JOIN t_xietong_user v ON v.`id` = d.`vice_leader_id`
   WHERE FIND_IN_SET(d.`id`,
    getMeunTreeChild((SELECT d.`id` FROM t_xietong_department d WHERE d.`name`=#{cname})))
    AND d.`isdelete` = '1'  ORDER BY d.`sort`;
  </select>

    <!--SELECT d.*,dd.`name` AS parentName FROM t_xietong_user u INNER JOIN t_xietong_user_departments ud-->
    <!--ON u.`id` = ud.`uid`-->
    <!--INNER JOIN t_xietong_department d-->
    <!--ON ud.`did` = d.`id` LEFT JOIN t_xietong_department dd ON d.`parent_id` = dd.`id` WHERE FIND_IN_SET(d.`id`,getMeunTreeChild((SELECT d.`id` FROM t_xietong_department d WHERE d.`name`=  "组织机构图")))-->
    <!--AND d.`isdelete` = '1' AND u.`id` =#{uid} AND ud.`status` = "1"  ORDER BY d.`sort`;-->
  <select id="findDepartmentTreeByUid" resultMap="BaseResultMap">
 SELECT d.*,dd.`name` AS parentName,l.`name_cn` AS leaderName ,v.`name_cn` AS viceName ,l.`status` AS lstatus ,v.`status` AS vstatus FROM t_xietong_user u
 INNER JOIN t_xietong_user_departments ud
 ON u.`id` = ud.`uid`
 INNER JOIN t_xietong_department d
 ON ud.`did` = d.`id` LEFT JOIN t_xietong_department dd ON d.`parent_id` = dd.`id`
  LEFT JOIN t_xietong_user l ON l.`id` = d.`leader_id`
 LEFT JOIN t_xietong_user v ON v.`id` = d.`vice_leader_id`
 WHERE FIND_IN_SET(d.`id`,getMeunTreeChild((SELECT d.`id` FROM t_xietong_department d WHERE d.`name`=  "组织机构图")))
 AND d.`isdelete` = '1' AND u.`id` =#{uid}  AND ud.`status` = "1"  ORDER BY d.`sort`;

  </select>


  <resultMap id="usersByDid" type="com.project.mgt.entity.TXietongDepartment">
    <id column="did" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="disdelete" property="isdelete" jdbcType="SMALLINT" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="dsort" property="sort" jdbcType="INTEGER" />
    <result column="leader_id" property="leaderId" jdbcType="VARCHAR" />
    <result column="vice_leader_id" property="viceLeaderId" jdbcType="VARCHAR" />
    <result column="isleaf" property="isleaf" jdbcType="INTEGER" />

    <collection property="users" ofType="com.project.mgt.entity.TXietongUser">
      <id column="uid" property="id" jdbcType="VARCHAR" />
      <result column="login_name" property="loginName" jdbcType="VARCHAR" />
      <result column="departmentId" property="departmentid" jdbcType="VARCHAR" />
      <result column="name_cn" property="nameCn" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
      <result column="uisdelete" property="isdelete" jdbcType="SMALLINT" />
      <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
      <result column="usort" property="sort" jdbcType="INTEGER" />
      <result column="status" property="status" jdbcType="INTEGER" />
      <result column="birth" property="birth" jdbcType="TIMESTAMP" />
      <result column="political_aff" property="politicalAff" jdbcType="INTEGER" />
      <result column="telphone" property="telphone" jdbcType="VARCHAR" />
      <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
      <result column="top_contacts" property="topContacts" jdbcType="VARCHAR" />
      <result column="sex" property="sex" jdbcType="INTEGER" />
      <result column="emp_num" property="empNum" jdbcType="VARCHAR" />
      <!--<result column="departmentName" property="departmentName" jdbcType="VARCHAR"/>-->
      <!--<result column="rid" property="rid" jdbcType="VARCHAR"/>-->
      <!--<result column="roleName" property="roleName" jdbcType="VARCHAR"/>-->
    </collection>
  </resultMap>


  <resultMap id="userRoleDepartment" type="com.project.mgt.entity.TXietongUser">
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="departmentId" property="departmentid" jdbcType="VARCHAR" />
    <result column="name_cn" property="nameCn" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="isdelete" property="isdelete" jdbcType="SMALLINT" />
    <result column="createtime" property="createtime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="birth" property="birth" jdbcType="TIMESTAMP" />
    <result column="political_aff" property="politicalAff" jdbcType="INTEGER" />
    <result column="telphone" property="telphone" jdbcType="VARCHAR" />
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
    <result column="top_contacts" property="topContacts" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="emp_num" property="empNum" jdbcType="VARCHAR" />
    <result column="departmentName" property="departmentName" jdbcType="VARCHAR"/>
    <result column="rid" property="rid" jdbcType="VARCHAR"/>
    <result column="roleName" property="roleName" jdbcType="VARCHAR"/>
    <result column="rstatus" property="rstatus" jdbcType="VARCHAR"/>
    <result column="dstatus" property="dstatus" jdbcType="VARCHAR"/>
  </resultMap>

  <select id="findUsersByDepartmentIdPage" resultMap="userRoleDepartment">
   SELECT u.*,d.`name` AS departmentName,r.`id` AS rid , r.`name` AS roleName ,r.`isdelete` AS rstatus,d.`isdelete` AS dstatus FROM t_xietong_user u
   LEFT JOIN t_xietong_department d ON u.`departmentId` = d.`id`
   LEFT JOIN t_xietong_user_role ur ON ur.`user_id` = u.`id` LEFT JOIN t_xietong_role r ON ur.`role_id` = r.`id`
   WHERE d.`id` = #{did} AND u.`isdelete` = "1"  AND ur.`status` = "1"
   ORDER BY u.`sort` LIMIT #{pageNo},#{pageSize}
  </select>

  <!--SELECT u.*,d.`name` AS departmentName,r.`id` AS rid , r.`name` AS roleName FROM t_xietong_user u-->
  <!--LEFT JOIN t_xietong_department d ON u.`departmentId` = d.`id`-->
  <!--LEFT JOIN t_xietong_user_role ur ON ur.`user_id` = u.`id` LEFT JOIN t_xietong_role r ON ur.`role_id` = r.`id`-->
  <!--WHERE d.`id` = #{did} AND u.`isdelete` = "1" AND r.`isdelete` = "1" AND d.`isdelete` = "1" AND ur.`status` = "1"-->
  <!--ORDER BY u.`sort` LIMIT #{pageNo},#{pageSize}-->
  <select id="findUsersByDepartmentId" resultMap="userRoleDepartment">
    SELECT u.*,d.*,u.`id` AS uid,d.`id` AS did,u.`isdelete` AS uisdelete,d.`isdelete` AS disdelete ,u.`sort` AS usort,d.`sort` AS dsort,
 d.`name` AS departmentName
 FROM t_xietong_user u INNER JOIN t_xietong_department d ON u.`departmentId` = d.`id`
 WHERE u.`departmentId` = #{did} AND u.`isdelete` = '1'  ORDER BY u.`sort`
  </select>


  <!--SELECT u.*,d.*,u.`id` AS uid,d.`id` AS did,u.`isdelete` AS uisdelete,d.`isdelete` AS disdelete ,u.`sort` AS usort,d.`sort` AS dsort,-->
  <!--d.`name` AS departmentName-->
  <!--FROM t_xietong_user u INNER JOIN t_xietong_department d ON u.`departmentId` = d.`id`  LEFT JOIN t_xietong_user_role ur ON ur.`user_id` = u.`id` LEFT JOIN t_xietong_role r ON ur.`role_id` = r.`id`-->
  <!--WHERE u.`departmentId` = #{did} AND u.`isdelete` = '1' AND d.`isdelete`='1' AND ur.`status` = "1" AND r.`isdelete` = "1" AND d.`isdelete` = "1" ORDER BY u.`sort`-->
  <select id="countUsersByDepartmentId" resultType="int">
   SELECT COUNT(u.`id`)
    FROM t_xietong_user u INNER JOIN t_xietong_department d ON u.`departmentId` = d.`id`
    WHERE u.`departmentId` = #{did} AND u.`isdelete` = '1'
  </select>



  <update id="deleteDeparmentId">
 UPDATE t_xietong_department D SET D.isdelete = "0" WHERE D.`id` = #{id}
  </update>

  <select id="selectNameById" resultType="string">
    SELECT d.`name` FROM t_xietong_department d WHERE d.`id` = #{id} AND d.`isdelete` = "1"
  </select>


  <select id="queryDepartMentName" resultMap="BaseResultMap">
    select * from t_xietong_department
  </select>



  <select id="findDepartmentByLeadId" resultMap="BaseResultMap">
    SELECT * FROM t_xietong_department d WHERE d.`leader_id` =#{leadName} AND d.`isdelete` = "1"
  </select>

  <select id="findDepartmentViceId" resultMap="BaseResultMap">
    SELECT * FROM t_xietong_department d WHERE d.`vice_leader_id` = #{viceName} AND d.`isdelete` = "1"
  </select>

  <select id="findDepartmentByNameOrPingyin" resultMap="BaseResultMap">
    SELECT * FROM t_xietong_department d WHERE d.`name` LIKE CONCAT('%',#{name},'%') AND  d.`isdelete` = "1" OR d.`pingyin` LIKE CONCAT('%',#{name},'%')  AND  d.`isdelete` = "1"
  </select>


  <update id="updateDepartmentLeader" >
    UPDATE t_xietong_department d SET d.`leader_id` = #{leader} WHERE d.`id` = #{id}
  </update>
</mapper>

